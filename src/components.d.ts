/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CountTo {
        "decimal": string;
        "duration": number;
        "endValue": number;
        "pauseResume": () => Promise<boolean>;
        /**
          * 精度：几位小数
         */
        "precision": number;
        "reset": () => Promise<boolean>;
        "separator": string;
    }
}
export interface CountToCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCountToElement;
}
declare global {
    interface HTMLCountToElement extends Components.CountTo, HTMLStencilElement {
    }
    var HTMLCountToElement: {
        prototype: HTMLCountToElement;
        new (): HTMLCountToElement;
    };
    interface HTMLElementTagNameMap {
        "count-to": HTMLCountToElement;
    }
}
declare namespace LocalJSX {
    interface CountTo {
        "decimal"?: string;
        "duration"?: number;
        "endValue"?: number;
        "onOn-end"?: (event: CountToCustomEvent<number>) => void;
        /**
          * 精度：几位小数
         */
        "precision"?: number;
        "separator"?: string;
    }
    interface IntrinsicElements {
        "count-to": CountTo;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "count-to": LocalJSX.CountTo & JSXBase.HTMLAttributes<HTMLCountToElement>;
        }
    }
}
